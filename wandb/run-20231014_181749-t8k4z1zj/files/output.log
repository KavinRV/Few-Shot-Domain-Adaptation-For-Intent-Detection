
Downloading readme: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 614/614 [00:00<00:00, 1.84MB/s]
Downloading data files:   0%|                                                                                                                                     | 0/1 [00:00<?, ?it/s]


















Downloading data: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 153M/153M [01:01<00:00, 3.01MB/s]


















Downloading data: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉| 155M/155M [00:54<00:00, 2.33MB/s]


















Downloading data:  99%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍ | 155M/157M [00:50<00:00, 3.20MB/s]


















Downloading data: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊| 155M/155M [01:15<00:00, 1.69MB/s]


















Downloading data: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 154M/154M [00:55<00:00, 3.06MB/s]


















Downloading data files: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [06:03<00:00, 363.89s/it]
Extracting data files: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 143.45it/s]





Generating train split: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████| 1963270/1963270 [00:10<00:00, 195172.08 examples/s]
Downloading readme: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 606/606 [00:00<00:00, 2.38MB/s]
Downloading data files:   0%|                                                                                                                                     | 0/1 [00:00<?, ?it/s]
Downloading data files: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  2.69s/it]
Extracting data files: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 1010.19it/s]
Generating train split: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 6970/6970 [00:00<00:00, 113530.38 examples/s]
Some weights of ReRanker were not initialized from the model checkpoint at roberta-base and are newly initialized: ['domain_classifier.out_proj.bias', 'domain_classifier.dense.weight', 'classifier.out_proj.bias', 'domain_classifier.out_proj.weight', 'domain_classifier.dense.bias', 'classifier.dense.bias', 'classifier.out_proj.weight', 'classifier.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/transformers/optimization.py:411: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
  0%|                                                                                                                                                         | 0/12270 [00:00<?, ?it/s]You're using a RobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Traceback (most recent call last):
  File "/raid/kavin-intern-maunendra/GenRet/roberta.py", line 254, in <module>
    trainer.train()
  File "/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/transformers/trainer.py", line 1539, in train
    return inner_training_loop(
  File "/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/transformers/trainer.py", line 1809, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/transformers/trainer.py", line 2654, in training_step
    loss = self.compute_loss(model, inputs)
  File "/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/transformers/trainer.py", line 2679, in compute_loss
    outputs = model(**inputs)
  File "/raid/kavin-intern-maunendra/anaconda3/envs/wow/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/kavin-intern-maunendra/GenRet/roberta.py", line 92, in forward
    pass_label = pass_label[pass_label != -100::self.n_pass]
TypeError: only integer tensors of a single element can be converted to an index